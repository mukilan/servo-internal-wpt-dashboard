name: Nightly job to update internal WPT dashboard

on:
  # Run an hour after rust nightly job
  schedule:
    - cron: '30 6 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

env:
  RUST_BACKTRACE: 1
  SHELL: /bin/bash

jobs:
  nightly-dashboard-job:
    name: Nightly Job for WPT trend dashboard
    runs-on: ubuntu-20.04
    env:
      max_chunk_id: 20
    strategy:
      matrix:
        chunk_id: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
    steps:
      - name: Checkout servo repo
        uses: actions/checkout@v3
        with:
          repository: servo/servo
          path: servo
      - name: Prep test environment
        run: |
          python3 -m pip install --upgrade pip virtualenv
          sudo apt update
          sudo apt install -qy --no-install-recommends libgl1 libssl1.1 libdbus-1-3 libxcb-xfixes0-dev libxcb-shape0-dev libunwind8 libegl1-mesa
          sudo apt install -qy libgstreamer1.0-0 libgstreamer-gl1.0-0 libgstreamer-plugins-bad1.0-0
          wget http://mirrors.kernel.org/ubuntu/pool/main/libf/libffi/libffi6_3.2.1-8_amd64.deb
          sudo apt install ./libffi6_3.2.1-8_amd64.deb
      - name: Download latest nightly
        run: |
          ./mach bootstrap-gstreamer
          wget https://download.servo.org/nightly/linux/servo-latest.tar.gz
          tar -xzf servo-latest.tar.gz
          mkdir -p target/release
          mv servo/resources target/release/resources
          mv servo/servo target/release/servo

          SERVO_VERSION=$(./target/release/servo --version)
          echo Downloaded $SERVO_VERSION
          echo "SERVO_VERSION=$SERVO_VERSION" >> $GITHUB_ENV
        working-directory: servo
      - name: Run tests
        run: |
          python3 ./mach test-wpt --release css/CSS2/borders css/CSS2/normal-flow \
            --release --log-wptreport=wpt-report-${{ matrix.chunk_id }}.json \
            --processes $(nproc) --timeout-multiplier 2 \
            --always-succeed \
            --browser-version "$SERVO_VERSION" \
            --this-chunk ${{ matrix.chunk_id }} \
            --total-chunks ${{ env.max_chunk_id }}
        working-directory: servo
      - name: Archive the wpt result chunk
        uses: actions/upload-artifact@v3
        with:
          name: wpt-chunks
          path: servo/wpt-report-${{ matrix.chunk_id }}.json

  process-new-run:
    name: Process all chunks and update metrics
    runs-on: ubuntu-20.04
    needs:
      - 'nightly-dashboard-job'
    steps:
      - name: Checkout dashboard repo
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Download artifact with all chunks
        uses: actions/download-artifact@v3
        with:
          name: wpt-chunks
          path: wpt-chunks
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - name: Process new test results
        run: |
          CURRENT_DATE=$(date +"%Y-%m-%d")
          mkdir -p runs
          node index.js --add wpt-chunks "$CURRENT_DATE"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add runs/${CURRENT_DATE}.xz
          git commit -m "Add run for $CURRENT_DATE"
          git push
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
